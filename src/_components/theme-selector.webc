<script webc:scoped>
    document.addEventListener("DOMContentLoaded", () => {
        let theme = localStorage.getItem("current-theme")
        if (theme) {
            const {c0, c1} = JSON.parse(theme)
            updateTheme(c0, c1, true)
        }
    })

    function updateTheme(c0, c1, keep) {
        const rootStyle = document.querySelector(":root").style
        localStorage.setItem("current-theme", JSON.stringify({c0, c1}))
        rootStyle.setProperty("--color0", c0)
        rootStyle.setProperty("--color1", c1)
        if (!keep) toggleOptions()
    }

    function toggleOptions() {
        if (document.querySelector(".options-hide")) {
            document.querySelectorAll(".options-hide")
                .forEach(op => op.className = "theme-options options-show")
            document.querySelector(".theme-shadow").style.display="block";
        } else {
            document.querySelectorAll(".options-show")
                .forEach(op => op.className = "theme-options options-hide")
            document.querySelector(".theme-shadow").style.display="none";
        }
    }
</script>
<div class="theme-shadow" onclick="toggleOptions()"></div>
<div class="theme-box">
    <div onclick="toggleOptions()" class="current-theme"
         title="Current color theme">
        <div class="bg1"></div>
        <div class="bg2"></div>
    </div>
    <hr/>
    <div webc:for="t of $data.colors">
      <div :onclick="`updateTheme('${t.c0}','${t.c1}')`"
          :style="`color: ${t.c0}; background-color: ${t.c1};`"
          class="theme-options options-hide" :title="t.label">
        <div class="bg1" :style="`background-color: ${t.c0};`"></div>
        <div class="bg2" :style="`background-color: ${t.c1};`"></div>
      </div>
    </div>
</div>
<style webc:scoped>
    .theme-shadow {
        display: none;
        position: fixed;
        top:0px;
        bottom:0px;
        left:0px;
        right: 0px;
        background-color: rgba(20,20,20,0.3);
        /*opacity: 0.2;*/
        -moz-backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
        backdrop-filter: blur(5px);
    }

    .theme-box {
        --theme-rad: 2.5em;
        position: fixed;
        top: 0;
        left: 0;
        display: flex;
        /*flex-direction: column;*/
        max-width: 100vw;
        flex-wrap: wrap;
    }

    .current-theme, .theme-options {
        min-width: var(--theme-rad);
        min-height: var(--theme-rad);
        border: 1px solid;
        border-color: var(--color1);
        border-radius: var(--theme-rad);
        display: flex;
        transform: rotate(45deg);
        opacity: 0.5;
    }

    .theme-options {
        opacity: 1;
    }

    .options-hide {
        display: none;
    }

    .options-show {
        display: flex;
    }

    .bg1, .bg2 {
        overflow: hidden;
        flex-grow: 1;
    }

    .bg1 {
        background-color: var(--color0);
        border-top-left-radius: var(--theme-rad);
        border-bottom-left-radius: var(--theme-rad);
    }

    .bg2 {
        background-color: var(--color1);
        border-top-right-radius: var(--theme-rad);
        border-bottom-right-radius: var(--theme-rad);
    }

    @media print {
        .theme-box {
            display:none;
        }
    }
</style>